{"version":3,"file":"static/js/870.f4840487.chunk.js","mappings":"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","sources":["components/Main/Main.module.css","webpack://my_3_app/./src/components/Main/Newpost.module.css?7a99","components/Main/Newpost.jsx","webpack://my_3_app/./src/components/Main/Posts.module.css?154d","components/Main/Posts.jsx","webpack://my_3_app/./src/components/Main/Status.module.css?a2e8","components/Main/Status.jsx","components/Main/Main.jsx","components/Main/MainContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__+w4kn\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Newpost_post__CPNWt\",\"input\":\"Newpost_input__Qu0wR\"};","import React, { memo } from \"react\";\r\nimport s from \"./Newpost.module.css\";\r\nimport Button from \"../Other/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Newpost(props) {\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const submit = (data) => {\r\n    props.addPost(data.post);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={s.post}>\r\n      <textarea\r\n        {...register(\"post\", { required: true })}\r\n        placeholder=\"Что у вас нового?\"\r\n        className={s.input}\r\n      />\r\n      <Button text=\"Опубликовать\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default memo(Newpost);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__5q8k2\",\"head\":\"Posts_head__viDiz\",\"ava\":\"Posts_ava__rN4Kf\",\"title\":\"Posts_title__EjwSk\",\"date\":\"Posts_date__yT7uL\",\"icon\":\"Posts_icon__I9C6Z\"};","import React, { memo } from \"react\";\r\nimport s from \"./Posts.module.css\";\r\nimport Hr from \"../Other/Hr\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Posts = (props) => {\r\n  const date = new Date(props.post.date);\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.head}>\r\n        <div>\r\n          <div className={s.title}>\r\n            <img className={s.ava} src={props.post.ava} alt=\"ava\" />\r\n            <h3>{props.post.profileName}</h3>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <span className={s.date}>\r\n            {date.toLocaleTimeString().slice(0, 5)} {date.toLocaleDateString()}\r\n          </span>\r\n          <FontAwesomeIcon\r\n            onClick={() => props.deletePost(props.post.date)}\r\n            icon={faTrash}\r\n            className={s.icon}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Hr />\r\n      <div className={s.body}>{props.post.body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Posts);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"Status_status__Z4HTg\",\"edit\":\"Status_edit__F16Vj\",\"text\":\"Status_text__KnLC9\",\"error\":\"Status_error__nptRS\",\"delete\":\"Status_delete__WTiuE\"};","import React, { useState, useEffect, memo, useRef } from \"react\";\r\nimport s from \"./Status.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faXmark\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Status = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, newStatus] = useState(props.status);\r\n  const statusElem = useRef(null);\r\n  const [x_y, setX_Y] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setX_Y({\r\n      left: `${statusElem.current.getBoundingClientRect().left}px`,\r\n      top: `${statusElem.current.getBoundingClientRect().bottom + 5}px`,\r\n    });\r\n    newStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <div ref={statusElem} className={s.status}>\r\n      {editMode ? (\r\n        <input\r\n          className={s.edit}\r\n          autoFocus\r\n          type=\"text\"\r\n          onBlur={(e) => {\r\n            setEditMode(false);\r\n            props.putStatus(e.currentTarget.value);\r\n          }}\r\n          value={status}\r\n          onChange={(e) => newStatus(e.currentTarget.value)}\r\n        />\r\n      ) : (\r\n        <div\r\n          className={s.text}\r\n          onDoubleClick={() => {\r\n            setEditMode(true);\r\n          }}\r\n        >\r\n          {props.status || \"Установите ваш статус\"}\r\n        </div>\r\n      )}\r\n      {!editMode && props.errorMessage && <div style={x_y} className={s.error}>\r\n        {props.errorMessage}\r\n        <FontAwesomeIcon\r\n            onClick={() => props.setError(null)}\r\n            icon={faXmark}\r\n            className={s.delete}\r\n        />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Status);\r\n","import React from \"react\";\r\nimport s from \"./Main.module.css\";\r\nimport Newpost from \"./Newpost\";\r\nimport Posts from \"./Posts\";\r\nimport Status from \"./Status\";\r\nimport Hr from \"../Other/Hr\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={s.main}>\r\n      <Status status={props.status} putStatus={props.putStatus} errorMessage={props.errorMessage} setError={props.setError} />\r\n      <Hr />\r\n      <Newpost addPost={props.addPost} />\r\n      {props.state.posts.map((post) => (\r\n        <Posts key={post.date} post={post} deletePost={props.deletePost} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Main from \"./Main\";\r\nimport { addPost, deletePost } from \"../../redux/dataReducer\";\r\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, putStatus, setError } from \"../../redux/profileReducer\";\r\nimport Preloader from \"../Other/Preloader\";\r\n\r\nconst MainContainer = (props) => {\r\n  useEffect(() => {\r\n    props.getStatus(props.id);\r\n  }, []);\r\n\r\n  //console.log('main render');\r\n\r\n  return props.statusIsFetching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <Main\r\n      status={props.status}\r\n      state={props.state}\r\n      putStatus={props.putStatus}\r\n      addPost={props.addPost}\r\n      deletePost={props.deletePost}\r\n      errorMessage={props.errorMessage}\r\n      setError={props.setError}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(\"main mstp\");\r\n  return {\r\n    state: state.data.main,\r\n    status: state.profile.status,\r\n    id: state.auth.id,\r\n    statusIsFetching: state.profile.statusIsFetching,\r\n    errorMessage: state.profile.errorMessage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withAuthNavigate,\r\n  connect(mapStateToProps, { addPost, deletePost, getStatus, putStatus, setError })\r\n)(MainContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nconst withAuthNavigate = (Component) => {\r\n\r\n    const AuthNavigate = (props) => {\r\n        if(!props.isAuth) return <Navigate to='/login' />\r\n        return <Component />\r\n    }\r\n\r\n    return connect((state) => ({isAuth: state.auth.isAuthenticated}))(AuthNavigate);\r\n\r\n};\r\n\r\n\r\nexport default withAuthNavigate;"],"names":["Newpost","props","useForm","register","handleSubmit","reset","onSubmit","data","addPost","post","className","s","required","placeholder","Button","text","memo","Posts","date","Date","src","ava","alt","profileName","toLocaleTimeString","slice","toLocaleDateString","onClick","deletePost","icon","faTrash","Hr","body","Status","useState","editMode","setEditMode","status","newStatus","statusElem","useRef","x_y","setX_Y","useEffect","left","current","getBoundingClientRect","top","bottom","ref","autoFocus","type","onBlur","e","putStatus","currentTarget","value","onChange","onDoubleClick","errorMessage","style","setError","faXmark","state","posts","map","compose","withAuthNavigate","connect","main","profile","id","auth","statusIsFetching","getStatus","Preloader","Component","isAuth","isAuthenticated","to"],"sourceRoot":""}